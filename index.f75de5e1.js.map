{"mappings":"AAAA;AAEA,MAAM,kBAAkB,SAAS,aAAa,CAAC;AAC/C,MAAM,YAAY;OAAI,gBAAgB,QAAQ;CAAC;AAE/C,MAAM,WAAW,CAAC;IAChB,OAAO,OAAO,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC;AAC/D;AAEA,SAAS,SAAS,IAAI;IACpB,MAAM,SAAS,KAAK,IAAI,CAAC,CAAC,GAAG,IAAM,SAAS,KAAK,SAAS;IAE1D,gBAAgB,MAAM,IAAI;AAC5B;AAEA,SAAS,aAAa,IAAI;IACxB,MAAM,gBAAgB,KAAK,GAAG,CAAC,CAAA,MAAQ,CAAA;YACrC,MAAM,IAAI,SAAS;YACnB,UAAU,IAAI,OAAO,CAAC,QAAQ;YAC9B,QAAQ,IAAI,OAAO,CAAC,MAAM;YAC1B,KAAK,IAAI,OAAO,CAAC,GAAG;QACtB,CAAA;IAEA,OAAO;AACT;AAEA,SAAS;AACT,aAAa","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst listOfEmployees = document.querySelector('ul');\nconst employees = [...listOfEmployees.children];\n\nconst toNumber = (string) => {\n  return Number(string.dataset.salary.slice(1).split(',').join(''));\n};\n\nfunction sortList(list) {\n  const sorted = list.sort((a, b) => toNumber(b) - toNumber(a));\n\n  listOfEmployees.append(...sorted);\n};\n\nfunction getEmployees(list) {\n  const listOfObjects = list.map(key => ({\n    name: key.innerText,\n    position: key.dataset.position,\n    salary: key.dataset.salary,\n    age: key.dataset.age,\n  }));\n\n  return listOfObjects;\n};\n\nsortList(employees);\ngetEmployees(employees);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}